{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/WelcomeMessage.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","Shared/Content.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","setApiKey","AppContext","React","createContext","MAX_FAVORITES","TIME_UNITS","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","state","firstVisit","prices","filter","price","Object","keys","length","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","returnData","i","favorites","priceFull","priceData","push","console","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","_","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","log","savedSettings","cryptoDashData","Provider","this","children","Component","Bar","Logo","AlignRight","ControlButtonElem","active","css","hidden","ControlButton","Consumer","lower","onClick","charAt","toUpperCase","substr","document","body","style","background","color","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","onKeyUp","e","target","Page","WelcomeMessage","CoinGrid","ConfirmButton","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightTileDashboard","SpotlightName","h2","title","text","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","colors","chart","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","ReactHighcharts","Highcharts","setOptions","HighchartsTheme","ChartSelect","defaultValue","onChange","config","highChartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","AppLayout","AppBar","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06812d18.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    padding: 10px 40px 40px 40px;\n    @media (max-width: 767px) {\n        padding: 5px;\n    }\n`","import React from 'react';\nimport _ from 'lodash';\nimport moment, { updateLocale } from 'moment';\n\n// Cryptocompare API\nconst cc = require('cryptocompare');\ncc.setApiKey('673bdadb925dbc46ffb08e1ddde86eda3b333c4a716649cbcf7ab9c688c12d72')\n\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10;\nconst TIME_UNITS = 10;\n\nexport class AppProvider extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            page: 'dashboard', \n            favorites: ['BTC', 'ETH'],\n            timeInterval: 'months',\n            ...this.savedSettings(),\n            setPage: this.setPage,\n            addCoin: this.addCoin,\n            removeCoin: this.removeCoin,\n            isInFavorites: this.isInFavorites,\n            confirmFavorites: this.confirmFavorites,\n            setCurrentFavorite: this.setCurrentFavorite,\n            setFilteredCoins: this.setFilteredCoins, \n            changeChartSelect: this.changeChartSelect\n        }\n    }\n\n    componentDidMount = () => {\n        this.fetchCoins();\n        this.fetchPrices();\n        this.fetchHistorical();\n    }\n\n    fetchCoins = async () => {\n        let coinList = (await cc.coinList()).Data;\n        this.setState({coinList});\n    }\n\n    fetchPrices = async () => {\n        if(this.state.firstVisit) return;\n        let prices = await this.prices();\n        // We must filter the empty price objects\n        prices = prices.filter(price => Object.keys(price).length);\n        this.setState({prices});\n    }\n\n    fetchHistorical = async () => {\n        if(this.state.firstVisit) return;\n        let results = await this.historical();\n        let historical = [\n            {\n                name: this.state.currentFavorite,\n                data: results.map((ticker, index) => [\n                    moment().subtract({[this.state.timeInterval] : TIME_UNITS - index}).valueOf(), \n                    ticker.USD\n                ])\n            }\n        ]\n        this.setState({historical});\n    }\n\n    prices = async () => {\n        let returnData = [];\n        for(let i = 0; i < this.state.favorites.length; i++){\n            try {\n                let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\n                returnData.push(priceData);\n            } catch (e){\n                console.warn('Fetch price error: ', e);\n            }\n        }\n        return returnData;\n    }\n\n    historical = () => {\n        let promises = [];\n        for (let units = TIME_UNITS; units > 0; units--){\n            promises.push(\n                cc.priceHistorical(\n                    this.state.currentFavorite, \n                    ['USD'],\n                    moment()\n                    .subtract({[this.state.timeInterval]: units})\n                    .toDate()\n                )\n            )\n        }\n        return Promise.all(promises);\n    }\n\n    addCoin = key => {\n        let favorites = [...this.state.favorites];\n        if(favorites.length < MAX_FAVORITES) {\n            favorites.push(key);\n            this.setState({favorites});\n        }\n    }\n\n    removeCoin = key => {\n        let favorites = [...this.state.favorites];\n        this.setState({favorites: _.pull(favorites, key)})\n    }\n\n    isInFavorites = key => _.includes(this.state.favorites, key)\n\n    confirmFavorites = () => {\n        let currentFavorite = this.state.favorites[0];\n        this.setState({\n            firstVisit: false,\n            page: 'dashboard', \n            currentFavorite, \n            prices: null, \n            historical: null\n        }, () => {\n            this.fetchPrices();\n            this.fetchHistorical();\n        });\n        localStorage.setItem('cryptoDash', JSON.stringify({\n            favorites: this.state.favorites, \n            currentFavorite\n        }));\n    }\n\n    setCurrentFavorite = (sym) => {\n        this.setState({\n            currentFavorite: sym, \n            historical: null\n        }, this.fetchHistorical);\n        localStorage.setItem('cryptoDash', JSON.stringify({\n            ...JSON.parse(localStorage.getItem('cryptoDash')),\n            currentFavorite: sym\n        }))\n    }\n\n    savedSettings(){\n        let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n        if(!cryptoDashData){\n            return {page: 'settings', firstVisit: true}\n        }\n        let {favorites, currentFavorite} = cryptoDashData;\n        return {favorites, currentFavorite};\n    }\n\n    setPage = page => this.setState({page});\n\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins});\n\n    changeChartSelect = (value) => {\n        console.log(value);\n        this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\n    }\n\n    render(){\n        return (\n            <AppContext.Provider value={this.state}>\n                {this.props.children}\n            </AppContext.Provider>\n        )\n    }\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {AppContext} from './AppProvider';\n\nconst Bar = styled.div`\n    margin-bottom: 0px;\n    display: grid;\n    grid-template-rows: auto auto;\n    grid-gap: 10px;\n`\n\nconst Logo = styled.div`\n    font-size: 2rem;\n    justify-self: center;\n`\n\nconst AlignRight = styled.div`\n    display: grid;\n    grid-gap: 10px;\n`\n\nconst ControlButtonElem = styled.div`\n    cursor: pointer;\n    text-align: right;\n    ${props => props.active && css`\n        text-shadow: 0px 0px 60px #03ff03;\n    `}\n    ${props => props.hidden && css`\n        display: none;\n    `}\n`\n\nfunction toProperCase(lower){\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({name}){\n    return (\n        <AppContext.Consumer>\n            {({firstVisit, page, setPage}) => (\n            <ControlButtonElem \n                active={page === name}\n                onClick={() => setPage(name)}\n                hidden={firstVisit && name === 'dashboard'}\n            >\n                {toProperCase(name)}\n            </ControlButtonElem>\n        )}\n        </AppContext.Consumer>\n    )\n}\n\nexport default function(){\n    return (\n        <Bar> \n            <Logo> Cryptodash </Logo>\n            <AlignRight>\n                <ControlButton active name=\"dashboard\"/>\n                <ControlButton name=\"settings\"/>\n            </AlignRight>\n        </Bar>\n    )\n}","import React from 'react';\nimport {AppContext} from '../App/AppProvider';\n\nexport default function ({firstVisit}) {\n    return (\n        <AppContext.Consumer>\n            {({firstVisit}) => \n                firstVisit ? <div>\n                    Welcome to Cryptodash, please select your favorite coins.{' '}\n                </div> : null\n            }   \n        </AppContext.Consumer>\n    );\n};","// const theme = 'dark';\nconst theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee';\n  document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from '../App/AppProvider';\nimport {fontSize1, greenBoxShadow, subtleBoxShadow} from '../Shared/Styles';\n\nconst ConfirmButtonStyled = styled.div`\n    margin: 10px 10px 20px 10px;\n    border: 2px solid rgb(6, 26, 68);\n    ${subtleBoxShadow};\n    border-radius: 50px;\n    color: rgb(6, 26, 68);\n    ${fontSize1};\n    font-weight: 900;\n    padding: 2px 10px 2px 10px;\n    cursor: pointer;\n    &:hover {\n        ${greenBoxShadow}\n    }\n`\n\nexport const CenterDiv = styled.div`\n    display: grid;\n    justify-content: center;\n`\n\nexport default function() {\n    return (\n        <AppContext.Consumer>\n            {({confirmFavorites}) =>\n            <CenterDiv>\n                <ConfirmButtonStyled onClick={confirmFavorites}>\n                    Confirm\n                </ConfirmButtonStyled>\n            </CenterDiv>\n        }\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport {AppContext} from '../App/AppProvider';\n\nexport default function ({name, children}) {\n    return <AppContext.Consumer>\n        {({page}) => {\n            if(page !== name) {\n                return null;\n            }\n            return <div> {children} </div>\n        }}\n    </AppContext.Consumer>;\n}","import styled from 'styled-components';\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from './Styles';\n\nexport const Tile = styled.div`\n    ${subtleBoxShadow};\n    ${lightBlueBackground};\n    padding: 10px;\n    display: grid;\n`\n\nexport const SelectableTile = styled(Tile)`\n    &:hover {\n        cursor: pointer;\n        ${greenBoxShadow};\n    }\n`\n\nexport const DeletableTile = styled(SelectableTile)`\n    &:hover{\n        cursor: pointer;\n        ${redBoxShadow}\n    }\n`\n\nexport const DisabledTile = styled(Tile)`\n    pointer-events: none;\n    opacity: 0.4;\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport {DeletableTile} from '../Shared/Tile';\n\nexport const CoinHeaderGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n`\n\nconst DeleteIcon = styled.div`\n    justify-self: right;\n    display: none;\n    ${DeletableTile}:hover &{\n        display: block;\n        color: red;\n    }\n`\n\nexport default function({name, symbol, topSection}) {\n    return (\n        <CoinHeaderGridStyled>\n            <div> {name} </div>\n            {topSection ? (<DeleteIcon> X </DeleteIcon>) : <CoinSymbol> {symbol} </CoinSymbol> }\n            \n        </CoinHeaderGridStyled>\n    )\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst CoinImage = styled.img`\n    height: 50px;\n    ${props => props.spotlight && css`\n        height: 100px;\n        margin: auto;\n        display: block;\n    `}\n`\n\nexport default function ({coin, spotlight}) {\n    return (\n        <CoinImage\n            spotlight={spotlight}\n            alt={coin.CoinSymbol}\n            src={`http://cryptocompare.com/${coin.ImageUrl}`}\n        />\n    )\n}","import React from 'react';\nimport {AppContext} from '../App/AppProvider';\nimport {SelectableTile, DisabledTile, DeletableTile, Tile} from '../Shared/Tile';\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\n    return topSection ? () => {\n        removeCoin(coinKey)\n    } : () => {\n        addCoin(coinKey)\n    }\n}\n\nexport default function({coinKey, topSection}){\n    return (\n        <AppContext.Consumer>\n            {({coinList, addCoin, removeCoin, isInFavorites}) => {\n                let coin = coinList[coinKey];\n\n                let TileClass = SelectableTile;\n                if(topSection) {\n                    TileClass = DeletableTile;\n                } else if(isInFavorites(coinKey)){\n                    TileClass = DisabledTile;\n                }\n\n                return (\n                    <TileClass\n                        onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\n                    >\n                        <CoinHeaderGrid \n                            topSection={topSection} \n                            name={coin.CoinName} \n                            symbol={coin.Symbol}/>\n                        <CoinImage coin={coin} />\n                    </TileClass>\n                )\n            }}\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from '../App/AppProvider';\nimport CoinTile from './CoinTile';\n\nexport const CoinGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    grid-gap: 15px;\n    margin-top: 40px;\n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins){\n    return (filteredCoins && Object.keys(filteredCoins)) || Object.keys(coinList).slice(0, 100)\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filteredCoins){\n    return topSection ? favorites : getLowerSectionCoins(coinList, filteredCoins);\n}\n\nexport default function ({topSection}){\n    return (\n        <AppContext.Consumer>\n            {({coinList, favorites, filteredCoins}) => (\n                <CoinGridStyled>\n                    {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey => \n                        <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey} />\n                    )}\n                </CoinGridStyled>\n            )}\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from '../Shared/Styles';\nimport {AppContext} from '../App/AppProvider';\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\n\nconst SearchGrid = styled.div`\n    display: grid;\n    grid-template-columns: 150px 150px;\n    @media (max-width: 400px) {\n        grid-template-columns: 150px;\n    }\n`\n\nconst SearchInput = styled.input`\n    ${backgroundColor2}\n    ${fontSize2}\n    border: 1px solid;\n    border-radius: 50px;\n    height: 25px;\n    color: #1163c9;\n    place-self: center left;\n`\n\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\n    // Get all coins' symbols\n    let coinSymbols = Object.keys(coinList);\n\n    //Get all coins' names and map symbol to name\n    let coinNames = coinSymbols.map(sym => coinList[sym].CoinName);\n\n    // we need to match both the coin symbols and the coin names: 'Bitcoin' result comes up either typing 'Bitcoin' or 'BTC'\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n\n    // use 'fuzzy' algorithm to do the search, which matches keywords likely to be relevant to the input value\n    let fuzzyResults = fuzzy\n        .filter(inputValue, allStringsToSearch, {})\n        .map(result => result.string);\n    \n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\n        let coinName = result.CoinName;\n        return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName));\n    });\n    console.log(filteredCoins);\n    setFilteredCoins(filteredCoins);\n}, 500);\n\nfunction filteredCoins(e, setFilteredCoins, coinList){\n    let inputValue = e.target.value;\n    if(!inputValue){\n        setFilteredCoins(null);\n        return;\n    }\n    handleFilter(inputValue, coinList, setFilteredCoins)\n}\n\nexport default function(){\n    return (\n        <AppContext.Consumer>\n            {({setFilteredCoins, coinList}) => \n                <SearchGrid> \n                    <h2> Search Coin </h2>\n                    <SearchInput onKeyUp={(e) => filteredCoins(e, setFilteredCoins, coinList)}/>\n                </SearchGrid>\n            }\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport WelcomeMessage from './WelcomeMessage';\nimport ConfirmButton from './ConfirmButton';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search';\n\nexport default function(){\n    return (\n        <Page name=\"settings\"> \n            <WelcomeMessage/> \n            <CoinGrid topSection/>\n            <ConfirmButton/> \n            <Search/>\n            <CoinGrid/>\n        </Page>\n    )      \n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SelectableTile} from '../Shared/Tile';\nimport {fontSize3, fontSizeBig, greenBoxShadow} from '../Shared/Styles';\nimport {CoinHeaderGridStyled} from '../Settings/CoinHeaderGrid';\nimport {AppContext} from '../App/AppProvider';\n\nconst JustifyRight = styled.div`\n    justify-self: right;\n`\n\nconst JustifyLeft = styled.div`\n    justify-self: left;\n`\n\nconst TickerPrice = styled.div`\n    ${fontSizeBig}\n`\n\nconst ChangePct = styled.div`\n    color: green;\n    ${props => props.red && css`\n        color: red;\n    `}\n`\n\nconst numberFormat = number => {\n    // '' converts the number to a string, in order to apply 'slice' to the string. Then, the '+' at the left, converts it back to number\n    return +(number + '').slice(0, 7);\n}\n\nconst PriceTileStyled = styled(SelectableTile)`\n    ${props => props.compact && css`\n        display: grid;\n        ${fontSize3}\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 5px;\n        justify-items: right;\n    `}\n\n    ${props => props.currentFavorite && css`\n        ${greenBoxShadow};\n        pointer-events: none;\n    `}\n`\n\nfunction ChangePercent({data}){\n    return (\n        <JustifyRight> \n            <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n                {numberFormat(data.CHANGEPCT24HOUR)}%\n            </ChangePct>\n        </JustifyRight>\n    )\n    \n}\n\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\n            <CoinHeaderGridStyled>\n                <div> {sym} </div>\n                <ChangePercent data={data}/>\n            </CoinHeaderGridStyled>\n            <TickerPrice>\n                ${numberFormat(data.PRICE)}\n            </TickerPrice>\n        </PriceTileStyled>\n    )\n}\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n        <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>\n            <JustifyLeft> {sym} </JustifyLeft>\n            <ChangePercent data={data}/>\n            <div>\n                ${numberFormat(data.PRICE)}\n            </div>\n        </PriceTileStyled>\n    )\n}\n\nexport default function({price, index}){\n    let sym = Object.keys(price)[0];\n    let data = price[sym]['USD'];\n    let TileClass = index < 5 ? PriceTile : PriceTileCompact;\n    return (\n        <AppContext.Consumer>\n            {({currentFavorite, setCurrentFavorite}) =>\n                <TileClass \n                    sym={sym} \n                    data={data}\n                    currentFavorite={currentFavorite === sym}\n                    setCurrentFavorite={() => setCurrentFavorite(sym)}\n                > \n                </TileClass>\n            }\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from '../App/AppProvider';\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    grid-gap: 15px;\n    grid-gap: 15px;\n    margin-top: 40px;\n`\n\nexport default function (){\n    return (\n        <AppContext.Consumer>\n            {({prices}) => (\n                <PriceGrid>\n                    {prices.map((price, index) => (\n                        <PriceTile key={`priceTile-${index}`} index={index} price={price}/>\n                    ))}\n                </PriceGrid>\n            )}\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {Tile} from '../Shared/Tile';\nimport {AppContext} from '../App/AppProvider';\nimport CoinImage from '../Shared/CoinImage';\n\nconst SpotlightTileDashboard = styled(Tile)`\n    grid-template-columns: 150px 150px;\n    justify-content: start;\n    @media (max-width: 400px) {\n        grid-template-columns: auto auto;\n\n        justify-content: space-around;\n    }\n`\n\nconst SpotlightName = styled.h2`\n    text-align: center;\n    align-self: center;\n`\n\nexport default function (){\n    return (\n        <AppContext.Consumer>\n            {({currentFavorite, coinList}) => \n                <SpotlightTileDashboard> \n                    <SpotlightName> {coinList[currentFavorite].CoinName} </SpotlightName>\n                    <CoinImage spotlight coin={coinList[currentFavorite]}/>\n                </SpotlightTileDashboard>\n            }\n        </AppContext.Consumer>\n    )\n}","export default function(historical) {\n    return {\n        title: {\n            text: ''\n        },\n\n        yAxis: {\n            title: {\n                text: 'Price'\n            }\n        },\n        xAxis: {type: 'datetime'},\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle'\n        },\n\n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                pointStart: 2010\n            }\n        },\n\n        series: historical,\n\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    legend: {\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom'\n                    }\n                }\n            }]\n        }\n    }\n}","import {lightTheme} from '../Shared/Styles';\n\nexport default {\n    colors: [\n        '#61d936', \n        '#552ccb', \n        '#1163c9', \n        '#04a1ee', \n        '#08c6e0',\n        '#146b9e', \n        '#f376c1',\n        '#1b2839'\n        ],\n    chart: {\n        backgroundColor: lightTheme ? 'white' : '#061a44',\n        borderColor: '#000000',\n        borderWidth: 0,\n        className: 'dark-container',\n        plotBackgroundColor: lightTheme ? 'white' : '#061a44',\n        plotBorderWidth: 0\n    },\n    title: {\n        style: {\n            color: '#C0C0C0',\n            font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#666666',\n            font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    xAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        tickColor: '#A0A0A0',\n        title: {\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n\n            }\n        }\n    },\n    yAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        minorTickInterval: null,\n        tickColor: '#A0A0A0',\n        tickWidth: 1,\n        title: {\n            style: {\n                color: '#061a44',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n            }\n        }\n    },\n    tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        style: {\n            color: '#F0F0F0'\n        }\n    },\n    toolbar: {\n        itemStyle: {\n            color: 'silver'\n        }\n    },\n    plotOptions: {\n        line: {\n            dataLabels: {\n                color: '#CCC'\n            },\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        spline: {\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        scatter: {\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        candlestick: {\n            lineColor: 'white'\n        }\n    },\n    legend: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        itemStyle: {\n            font: '9pt Trebuchet MS, Verdana, sans-serif',\n            color: '#A0A0A0'\n        },\n        itemHoverStyle: {\n            color: '#FFF'\n        },\n        itemHiddenStyle: {\n            color: '#444'\n        },\n        title: {\n            style: {\n                color: '#C0C0C0'\n            }\n        }\n    },\n    credits: {\n        enabled: false\n    },\n    labels: {\n        style: {\n            color: '#CCC'\n        }\n    },\n\n    navigation: {\n        buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            hoverSymbolStroke: '#FFFFFF',\n            theme: {\n                fill: {\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                    stops: [\n                        [0.4, '#606060'],\n                        [0.6, '#333333']\n                    ]\n                },\n                stroke: '#000000'\n            }\n        }\n    },\n\n    // scroll charts\n    rangeSelector: {\n        buttonTheme: {\n            fill: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0.4, '#888'],\n                    [0.6, '#555']\n                ]\n            },\n            stroke: '#000000',\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold'\n            },\n            states: {\n                hover: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.4, '#BBB'],\n                            [0.6, '#888']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                },\n                select: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.1, '#000'],\n                            [0.3, '#333']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'yellow'\n                    }\n                }\n            }\n        },\n        inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n        },\n        labelStyle: {\n            color: 'silver'\n        }\n    },\n\n    navigator: {\n        handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(16, 16, 16, 0.5)',\n        series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n        }\n    },\n\n    scrollbar: {\n        barBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        barBorderColor: '#CCC',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        buttonBorderColor: '#CCC',\n        rifleColor: '#FFF',\n        trackBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0, '#000'],\n                [1, '#333']\n            ]\n        },\n        trackBorderColor: '#666'\n    }\n};","import styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from '../Shared/Styles';\n\nexport default styled.select`\n    ${backgroundColor2};\n    ${fontSize2};\n    color: #1163c9;\n    border: 1px solid;\n    width: 95px;\n    justify-self: end;\n`;","import React from 'react';\nimport highChartsConfig from './HighchartsConfig';\nimport {Tile} from '../Shared/Tile';\nimport {AppContext} from '../App/AppProvider';\nimport ReactHighcharts from 'react-highcharts';\nimport HighchartsTheme from './HighchartsTheme';\nimport ChartSelect from './ChartSelect';\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\n\nexport default function() {\n    return (\n        <AppContext.Consumer>\n            {({historical, changeChartSelect}) =>\n                <Tile>\n                    <ChartSelect\n                        defaultValue='months'\n                        onChange={e => changeChartSelect(e.target.value)}\n                    >\n                        <option value='days'> Daily </option>\n                        <option value='weeks'> Weekly </option>\n                        <option value='months'> Monthly </option>\n                    </ChartSelect>\n                    {historical ?\n                        <ReactHighcharts config={highChartsConfig(historical)}/>\n                        : <div> Loading Data </div>\n                    }\n                </Tile>\n            }\n        </AppContext.Consumer>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotlight from './CoinSpotlight';\nimport PriceChart from './PriceChart';\n\nconst ChartGrid = styled.div`\n    display: grid;\n    margin-top: 20px;\n    grid-gap: 15px;\n    \n`\n\nexport default function(){\n    return (\n        <Page name=\"dashboard\"> \n            <PriceGrid/>\n            <ChartGrid>\n                <CoinSpotlight/>\n                <PriceChart/>\n            </ChartGrid>\n        </Page>\n    )      \n}","import React from 'react';\nimport {AppContext} from '../App/AppProvider';\n\nexport default function(props){\n    return (\n        <AppContext.Consumer>\n            {({coinList, prices, firstVisit}) => {\n                if(!coinList){\n                    return <div> Loading Coins </div>\n                }\n                if(!firstVisit && !prices){\n                    return <div> Loading Prices </div>\n                }\n                return <div> {props.children} </div>\n            }}\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport './App.css';\nimport AppLayout from './AppLayout';\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Dashboard from '../Dashboard/';\nimport Content from '../Shared/Content';\n\nfunction App() {\n  return (\n    <AppLayout>\n      <AppProvider>\n        <AppBar/>\n        <Content>\n          <Settings/>\n          <Dashboard/>\n        </Content>\n      </AppProvider>\n    </AppLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}